## show all observations, and don't color by rowid
iris %>%
tibble::as_tibble() %>%
tibble::rowid_to_column() %>%
pivot_longer(!c("rowid", "Species")) %>%
ggplot(mapping = aes(x = name, y = value)) +
geom_line(size = 1.25, mapping = aes(group = rowid)) +
geom_point(size = 2) +
theme_bw()
## show all observations, and don't color by rowid
iris %>%
tibble::as_tibble() %>%
tibble::rowid_to_column() %>%
pivot_longer(!c("rowid", "Species")) %>%
ggplot(mapping = aes(x = name, y = value)) +
geom_line(size = 1.25, mapping = aes(group = rowid)) +
geom_point(size = 2) +
theme_bw()
iris %>%
mutate_if(is.numeric, transform) %>%
tibble::as_tibble() %>%
summary()
iris %>%  summary()
## confirm trasnformation with boxplots
iris %>%
mutate_if(is.numeric, transform) %>%
tibble::as_tibble() %>%
tibble::rowid_to_column() %>%
pivot_longer(!c("rowid", "Species")) %>%
ggplot(mapping = aes(x = name, y = value)) +
geom_line(size = 1.25, mapping = aes(group = rowid)) +
geom_point(size = 2) +
theme_bw()
## scale or nomalize all numeric vars such that the MIN
## equals 0 and the MAX equals 1
transformed <- function(x){
(x - min(x)) / (max(x) - min(x))
}
iris %>%
mutate_if(is.numeric, transformed) %>%
tibble::as_tibble() %>%
summary()
## confirm trasnformation with boxplots
iris %>%
mutate_if(is.numeric, transformed) %>%
tibble::as_tibble() %>%
tibble::rowid_to_column() %>%
pivot_longer(!c("rowid", "Species")) %>%
ggplot(mapping = aes(x = name, y = value)) +
geom_line(size = 1.25, mapping = aes(group = rowid)) +
geom_point(size = 2) +
theme_bw()
## color lines by Species
iris %>%
mutate_if(is.numeric, transformed) %>%
tibble::as_tibble() %>%
tibble::rowid_to_column() %>%
pivot_longer(!c("rowid", "Species")) %>%
ggplot(mapping = aes(x = name, y = value)) +
geom_line(size = 1.25, mapping = aes(group = rowid, color = Species)) +
geom_point(size = 2) +
theme_bw()
## color lines by Species
iris %>%
mutate_if(is.numeric, transformed) %>%
tibble::as_tibble() %>%
tibble::rowid_to_column() %>%
pivot_longer(!c("rowid", "Species")) %>%
ggplot(mapping = aes(x = name, y = value)) +
geom_line(size = 1.25, mapping = aes(group = rowid, color = Species)) +
geom_point(size = 2, mapping = aes(color = Species)) +
theme_bw()
## color lines by Species
iris %>%
mutate_if(is.numeric, transformed) %>%
tibble::as_tibble() %>%
tibble::rowid_to_column() %>%
pivot_longer(!c("rowid", "Species")) %>%
ggplot(mapping = aes(x = name, y = value)) +
geom_line(size = 1.25, mapping = aes(group = rowid, color = Species)) +
geom_point(size = 2, mapping = aes(color = Species)) +
ggthemes::scale_color_colorblind() +
theme_bw() +
theme(legend.position = "top")
View(nfl_elo)
runApp()
runApp()
runApp()
View(nfl_elo)
runApp()
runApp()
runApp()
nfl_elo %>% filter(qb == input$panel4_qb) %>% ggplot() +
geom_histogram(mapping = aes(x = qb_value_post), bins = 31, fill = qb_team_colors[1], color = qb_team_colors[2]) +
xlim(min(nfl_elo$qb_value_post), max(nfl_elo$qb_value_post)) +
xlab('Player Elo Rating within All-time Range')
theme_bw()
# Plot histogram of qb_value_post
nfl_elo %>% filter(qb == input$panel4_qb) %>% ggplot() +
geom_histogram(mapping = aes(x = qb_value_post), bins = 31, fill = qb_team_colors[1], color = qb_team_colors[2]) +
xlim(min(nfl_elo$qb_value_post), max(nfl_elo$qb_value_post)) +
xlab('Player Elo Rating within All-time Range')
# Plot histogram of qb_value_post
nfl_elo %>% filter(qb == panel4_qb) %>% ggplot() +
geom_histogram(mapping = aes(x = qb_value_post), bins = 31, fill = qb_team_colors[1], color = qb_team_colors[2]) +
xlim(min(nfl_elo$qb_value_post), max(nfl_elo$qb_value_post)) +
xlab('Player Elo Rating within All-time Range')
runApp()
panel4_data <- nfl_elo %>%
filter(qb == panel4_qb) %>%
mutate(date = lubridate::as_datetime(date))
panel4_data <- nfl_elo %>%
filter(qb == panel4_qb) %>%
mutate(game_date = lubridate::as_datetime(date))
## Load in data set from Github
nfl_elo <- readr::read_csv('https://raw.githubusercontent.com/JTG89/nfl_elo_ratings/main/nfl_elo_SB_era.csv', col_names = TRUE)
## Format date column using the lubridate package and store as separate columns
nfl_elo <- nfl_elo %>%
mutate(game_date = lubridate::as_datetime(date), .after = date) %>%
mutate(year = lubridate::year(lubridate::mdy(date)), .after = season) %>%
mutate(month = lubridate::month(lubridate::mdy(date)), .after = year) %>%
mutate(day = lubridate::day(lubridate::mdy(date)), .after = month) %>%
mutate(day_of_week = lubridate::wday(lubridate::mdy(date), label = TRUE), .after = day) %>%
mutate(week_of_year = lubridate::week(lubridate::mdy(date)), .after = day_of_week)
panel4_data <- nfl_elo %>%
filter(qb == panel4_qb) %>%
mutate(date = lubridate::as_date(lubridate::mdy(date)), .after = season)
panel4_data <- nfl_elo %>%
filter(qb == panel4_qb) %>%
mutate(date = lubridate::as_date(lubridate::mdy(date)), .after = season)
## Load in data set from Github
nfl_elo <- readr::read_csv('https://raw.githubusercontent.com/JTG89/nfl_elo_ratings/main/nfl_elo_SB_era.csv', col_names = TRUE)
## Format date column using the lubridate package and store as separate columns
nfl_elo <- nfl_elo %>% mutate(year = lubridate::year(lubridate::mdy(date)), .after = season) %>%
mutate(month = lubridate::month(lubridate::mdy(date)), .after = year) %>%
mutate(day = lubridate::day(lubridate::mdy(date)), .after = month) %>%
mutate(day_of_week = lubridate::wday(lubridate::mdy(date), label = TRUE), .after = day) %>%
mutate(week_of_year = lubridate::week(lubridate::mdy(date)), .after = day_of_week)
# Build separate data frame to properly define the week of the season
week_in_season <- nfl_elo %>%
arrange(season, year, week_of_year) %>%
group_by(season, year, week_of_year) %>%
summarize(num_games = n(),
num_wdays = n_distinct(day_of_week),
num_months = n_distinct(month),
num_dates = n_distinct(date)) %>%
ungroup()
week_in_season <- week_in_season %>%
group_by(season) %>%
mutate(week_of_season = 1:n()) %>%
ungroup()
# Join the week of the season to the main dataframe
nfl_elo <- nfl_elo %>%
left_join(week_in_season %>%  select(season, year, week_of_year, week_of_season),
by = c('season', 'year', 'week_of_year'))
# Reorder columns within data set
nfl_elo <- nfl_elo[,c(1,2,3,4,5,6,7,36,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35)] %>%
group_by(season, week_of_season, date) %>% mutate(game_of_day_id = 1:n(), .after =week_of_season) %>% ungroup()
# Add column to track wins and losses
nfl_elo <- nfl_elo %>% mutate(win_loss = ifelse(score1 > score2, 'team1',
ifelse(score1 == score2, 'tie', 'team2')))
## Re-order dataframe into longer format for home & away
nfl_elo_home <- nfl_elo %>%
mutate(home_away = 'Home', .after = 'team1') %>%
mutate(result = ifelse(win_loss == 'team1', 'W', ifelse(win_loss == 'tie', 'tie', 'L'))) %>%
select(!win_loss) %>%
rename(
team = team1,
opponent = team2,
elo_pre = elo1_pre,
opponent_elo_pre = elo2_pre,
elo_prob = elo_prob1,
opponent_elo_prob = elo_prob2,
elo_post = elo1_post,
opponent_elo_post = elo2_post,
qbelo_pre = qbelo1_pre,
opposing_qbelo_pre = qbelo2_pre,
qb = qb1,
opposing_qb = qb2,
qb_value_pre = qb1_value_pre,
opposing_qb_value_pre = qb2_value_pre,
qb_adj = qb1_adj,
opposing_qb_adj = qb2_adj,
qbelo_prob = qbelo_prob1,
opposing_qbelo_prob = qbelo_prob2,
qb_game_value = qb1_game_value,
opposing_qb_game_value = qb2_game_value,
qb_value_post = qb1_value_post,
opposing_qb_value_post = qb2_value_post,
qbelo_post = qbelo1_post,
opposing_qbelo_post = qbelo2_post,
score = score1,
opponent_score = score2
)
nfl_elo_away <- nfl_elo %>%
mutate(home_away = 'Away', .after = 'team2') %>%
mutate(result = ifelse(win_loss == 'team2', 'W', ifelse(win_loss == 'tie', 'tie', 'L'))) %>%
select(!win_loss) %>%
rename(
team = team2,
opponent = team1,
elo_pre = elo2_pre,
opponent_elo_pre = elo1_pre,
elo_prob = elo_prob2,
opponent_elo_prob = elo_prob1,
elo_post = elo2_post,
opponent_elo_post = elo1_post,
qbelo_pre = qbelo2_pre,
opposing_qbelo_pre = qbelo1_pre,
qb = qb2,
opposing_qb = qb1,
qb_value_pre = qb2_value_pre,
opposing_qb_value_pre = qb1_value_pre,
qb_adj = qb2_adj,
opposing_qb_adj = qb1_adj,
qbelo_prob = qbelo_prob2,
opposing_qbelo_prob = qbelo_prob1,
qb_game_value = qb2_game_value,
opposing_qb_game_value = qb1_game_value,
qb_value_post = qb2_value_post,
opposing_qb_value_post = qb1_value_post,
qbelo_post = qbelo2_post,
opposing_qbelo_post = qbelo1_post,
score = score2,
opponent_score = score1
)
nfl_elo <- rbind(nfl_elo_home, nfl_elo_away) %>%
arrange(season, year, month, day, game_of_day_id)
# Set up playoff_week column to combine week_of_season and playoff
nfl_elo <- nfl_elo %>%
mutate(playoff_week = ifelse(is.na(playoff), week_of_season, playoff), .after = week_of_season)
nfl_elo$team[nfl_elo$team == "ARI"] <- "Arizona Cardinals"
nfl_elo$team[nfl_elo$team == "ATL"] <- "Atlanta Falcons"
nfl_elo$team[nfl_elo$team == "BAL"] <- "Baltimore Ravens"
nfl_elo$team[nfl_elo$team == "BUF"] <- "Buffalo Bills"
nfl_elo$team[nfl_elo$team == "CAR"] <- "Carolina Panthers"
nfl_elo$team[nfl_elo$team == "CHI"] <- "Chicago Bears"
nfl_elo$team[nfl_elo$team == "CIN"] <- "Cincinnati Bengals"
nfl_elo$team[nfl_elo$team == "CLE"] <- "Cleveland Browns"
nfl_elo$team[nfl_elo$team == "DAL"] <- "Dallas Cowboys"
nfl_elo$team[nfl_elo$team == "DEN"] <- "Denver Broncos"
nfl_elo$team[nfl_elo$team == "DET"] <- "Detroit Lions"
nfl_elo$team[nfl_elo$team == "GB"] <- "Green Bay Packers"
nfl_elo$team[nfl_elo$team == "HOU"] <- "Houston Texans"
nfl_elo$team[nfl_elo$team == "IND"] <- "Indianapolis Colts"
nfl_elo$team[nfl_elo$team == "JAX"] <- "Jacksonville Jaguars"
nfl_elo$team[nfl_elo$team == "KC"] <- "Kansas City Chiefs"
nfl_elo$team[nfl_elo$team == "LAC"] <- "Los Angeles Chargers"
nfl_elo$team[nfl_elo$team == "LAR"] <- "Los Angeles Rams"
nfl_elo$team[nfl_elo$team == "MIA"] <- "Miami Dolphins"
nfl_elo$team[nfl_elo$team == "MIN"] <- "Minnesota Vikings"
nfl_elo$team[nfl_elo$team == "NE"] <- "New England Patriots"
nfl_elo$team[nfl_elo$team == "NO"] <- "New Orleans Saints"
nfl_elo$team[nfl_elo$team == "NYG"] <- "New York Giants"
nfl_elo$team[nfl_elo$team == "NYJ"] <- "New York Jets"
nfl_elo$team[nfl_elo$team == "OAK"] <- "Oakland Raiders"
nfl_elo$team[nfl_elo$team == "PHI"] <- "Philadelphia Eagles"
nfl_elo$team[nfl_elo$team == "PIT"] <- "Pittsburgh Steelers"
nfl_elo$team[nfl_elo$team == "SEA"] <- "Seattle Seahawks"
nfl_elo$team[nfl_elo$team == "SF"] <- "San Francisco 49ers"
nfl_elo$team[nfl_elo$team == "TB"] <- "Tampa Bay Buccaneers"
nfl_elo$team[nfl_elo$team == "TEN"] <- "Tennessee Titans"
nfl_elo$team[nfl_elo$team == "WSH"] <- "Washington Redskins"
nfl_elo$opponent[nfl_elo$opponent == "ARI"] <- "Arizona Cardinals"
nfl_elo$opponent[nfl_elo$opponent == "ATL"] <- "Atlanta Falcons"
nfl_elo$opponent[nfl_elo$opponent == "BAL"] <- "Baltimore Ravens"
nfl_elo$opponent[nfl_elo$opponent == "BUF"] <- "Buffalo Bills"
nfl_elo$opponent[nfl_elo$opponent == "CAR"] <- "Carolina Panthers"
nfl_elo$opponent[nfl_elo$opponent == "CHI"] <- "Chicago Bears"
nfl_elo$opponent[nfl_elo$opponent == "CIN"] <- "Cincinnati Bengals"
nfl_elo$opponent[nfl_elo$opponent == "CLE"] <- "Cleveland Browns"
nfl_elo$opponent[nfl_elo$opponent == "DAL"] <- "Dallas Cowboys"
nfl_elo$opponent[nfl_elo$opponent == "DEN"] <- "Denver Broncos"
nfl_elo$opponent[nfl_elo$opponent == "DET"] <- "Detroit Lions"
nfl_elo$opponent[nfl_elo$opponent == "GB"] <- "Green Bay Packers"
nfl_elo$opponent[nfl_elo$opponent == "HOU"] <- "Houston Texans"
nfl_elo$opponent[nfl_elo$opponent == "IND"] <- "Indianapolis Colts"
nfl_elo$opponent[nfl_elo$opponent == "JAX"] <- "Jacksonville Jaguars"
nfl_elo$opponent[nfl_elo$opponent == "KC"] <- "Kansas City Chiefs"
nfl_elo$opponent[nfl_elo$opponent == "LAC"] <- "Los Angeles Chargers"
nfl_elo$opponent[nfl_elo$opponent == "LAR"] <- "Los Angeles Rams"
nfl_elo$opponent[nfl_elo$opponent == "MIA"] <- "Miami Dolphins"
nfl_elo$opponent[nfl_elo$opponent == "MIN"] <- "Minnesota Vikings"
nfl_elo$opponent[nfl_elo$opponent == "NE"] <- "New England Patriots"
nfl_elo$opponent[nfl_elo$opponent == "NO"] <- "New Orleans Saints"
nfl_elo$opponent[nfl_elo$opponent == "NYG"] <- "New York Giants"
nfl_elo$opponent[nfl_elo$opponent == "NYJ"] <- "New York Jets"
nfl_elo$opponent[nfl_elo$opponent == "OAK"] <- "Oakland Raiders"
nfl_elo$opponent[nfl_elo$opponent == "PHI"] <- "Philadelphia Eagles"
nfl_elo$opponent[nfl_elo$opponent == "PIT"] <- "Pittsburgh Steelers"
nfl_elo$opponent[nfl_elo$opponent == "SEA"] <- "Seattle Seahawks"
nfl_elo$opponent[nfl_elo$opponent == "SF"] <- "San Francisco 49ers"
nfl_elo$opponent[nfl_elo$opponent == "TB"] <- "Tampa Bay Buccaneers"
nfl_elo$opponent[nfl_elo$opponent == "TEN"] <- "Tennessee Titans"
nfl_elo$opponent[nfl_elo$opponent == "WSH"] <- "Washington Redskins"
# Case: don't filter (use reg season and playoff)
if(length(input$panel4_rsp) == 2) {
panel4_data <- nfl_elo %>%
filter(qb == panel4_qb) %>%
mutate(date = lubridate::as_date(lubridate::mdy(date)), .after = season)
panel4_league <- nfl_elo %>%
mutate(date = lubridate::as_datetime(date))
}
panel4_data <- nfl_elo %>%
filter(qb == panel4_qb) %>%
mutate(date = lubridate::as_date(lubridate::mdy(date)), .after = season)
View(panel4_data)
runApp()
runApp()
runApp()
runApp()
runApp()
# Select Team colors for plotting
team_tibble <- nfl_elo %>% filter(qb == panel4_qb) %>% select(team) %>% group_by(team) %>% count() %>% arrange(desc(n))
qb_team_colors <- team_pal(team_tibble$team[1])
# Plot histogram of qb_value_post
nfl_elo %>% filter(qb == panel4_qb) %>% ggplot() +
geom_histogram(mapping = aes(x = qb_value_post), bins = 31, fill = qb_team_colors[1], color = qb_team_colors[2]) +
xlim(min(nfl_elo$qb_value_post), max(nfl_elo$qb_value_post)) +
xlab('Player Elo Rating within All-time Range')
# Plot histogram of qb_value_post
nfl_elo %>% filter(qb == panel4_qb) %>% ggplot() +
geom_histogram(mapping = aes(x = qb_value_post), bins = 31, fill = qb_team_colors[1], color = qb_team_colors[2]) +
xlim(min(nfl_elo$qb_value_post), max(nfl_elo$qb_value_post)) +
xlab('Player Elo Rating within All-time Range')
runApp()
runApp()
runApp()
# Print figure with plotly
fig <- panel4_data %>% plot_ly()
fig <- fig %>%
add_trace(
type = 'scatter',
mode = 'lines+markers',
x = ~ date,
y = ~ qb_value_pre,
size = 5,
showlegend = FALSE
# fill = qb_team_colors[1],
# text = ~ paste("<b>", season, "Week", week_of_season, ':</b>', result, score, '-', opponent_score, "<br>",
#                home_away, "vs", opponent, '<br>',
#                "Pre-Game QB Elo Rating:", qb_value_pre, '<br>',
#                "Pre-Game Team Elo Rating:", elo_pre, '<br>',
#                "Win Probability: ", elo_prob)
)
fig
runApp()
# Print figure with plotly
fig <- panel4_data %>% plot_ly()
fig <- fig %>%
add_trace(
type = 'scatter',
mode = 'markers',
x = ~ date,
y = ~ qb_value_pre,
size = 5,
showlegend = FALSE
# fill = qb_team_colors[1],
# text = ~ paste("<b>", season, "Week", week_of_season, ':</b>', result, score, '-', opponent_score, "<br>",
#                home_away, "vs", opponent, '<br>',
#                "Pre-Game QB Elo Rating:", qb_value_pre, '<br>',
#                "Pre-Game Team Elo Rating:", elo_pre, '<br>',
#                "Win Probability: ", elo_prob)
)
fig
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
team_pal("Chicago Bears")
team_pal("Chicago Bears")[1]
team_pal("Chicago Bears")$primary
runApp()
runApp()
runApp()
panel1_data <- nfl_elo %>% filter(season == 2020, team == 'Chicago Bears', !is.na(playoff))
panel1_plot_data <- panel1_data %>% mutate(plot_var_pre = elo_pre,
plot_var_post = elo_post,
plot_var_opp_pre = opponent_elo_pre,
plot_var_opp_post = opponent_elo_post,
plot_prob = elo_prob)
length(panel1_plot_data)
nrow(panel1_plot_data)
View(panel1_plot_data)
panel1_data <- nfl_elo %>% filter(season == 2020, team == 'Chicago Bears', is.na(playoff))
panel1_plot_data <- panel1_data %>% mutate(plot_var_pre = elo_pre,
plot_var_post = elo_post,
plot_var_opp_pre = opponent_elo_pre,
plot_var_opp_post = opponent_elo_post,
plot_prob = elo_prob)
nrow(panel1_plot_data)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
panel2_data <- nfl_elo %>% filter(season == 2020, qb == 'Aaron Rodgers') %>%
mutate(color1 = team_pal(team)[1])
panel2_data <- nfl_elo %>% filter(season == 2020, qb == 'Aaron Rodgers') %>%
mutate(color1 = team_pal(team))
panel2_data <- nfl_elo %>% filter(season == 2020, qb == 'Aaron Rodgers') %>%
mutate(color1 = team_pal(team,1))
team_pal('Green Bay Packers', 1)
runApp()
runApp()
runApp()
nfl_elo %>%  mutate(color1 = team_pal(team))
nfl_elo %>%  mutate(color1 = team_pal(team, 1))
test <- nfl_elo %>%  mutate(color1 = team_pal(team, 1))
View(test)
mutate_at(nfl_elo$team, team_pal(, 1))
nfl_elo %>% mutate(color = pmap(., team_pal(.,1)))
nfl_elo$team %>% mutate(color = pmap(., team_pal(.,1)))
purrr::map(nfl_elo$team, team_pal(., 1))
purrr::map(nfl_elo$team, team_pal)
purrr::map(panel2_data$team, team_pal)
purrr::map(panel2_data$team, team_pal)[1]
purrr::map(panel2_data$team, team_pal)[:,1]
purrr::map(panel2_data$team, team_pal)[,1]
colors <- purrr::map(panel2_data$team, team_pal)
View(colors)
colors[[10]]
colors[[10]][1]
colors %>% as_tibble()
colors %>% as.list()
colors %>% as.data.frame()
colors <- purrr::map(panel2_data$team, team_pal, 1)
View(colors)
colors <- purrr::map(panel2_data$team, team_pal, 1) %>% as.data.frame()
View(colors)
colors <- purrr::map(panel2_data$team, team_pal, 1) %>% as.vector()
colors <- purrr::map(panel2_data$team, team_pal, 1) %>% as.vector() %>% t()
colors <- purrr::map(panel2_data$team, team_pal, 1) %>% as.vector() %>% t() %>% t()
panel2_data %>% mutate(color = colors)
View(panel2_data)
runApp()
runApp()
panel4_data$colors
runApp()
runApp()
panel4_data <- nfl_elo %>%
filter(qb == 'Peyton Manning', is.na(playoff)) %>%
mutate(date = lubridate::as_date(lubridate::mdy(date)), .after = season)
all_team_colors <- purrr::map(panel4_data$team, team_pal, 1) %>% as.vector() %>% t() %>% t()
View(all_team_colors)
panel4_data <- panel4_data %>% mutate(colors = all_team_colors)
color = list(panel4_data$colors)
View(color)
color = panel4_data$colors
View(color)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
panel4_data$date
panel4_data$date[1]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
The
runApp()
runApp('~/Grad School/CMPINF_2130_Art_of_Data_Visualization/R_Data_Visualization/Lectures/Lecture_11/Yurko_files')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
